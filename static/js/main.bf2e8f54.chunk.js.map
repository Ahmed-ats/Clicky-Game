{"version":3,"sources":["components/FriendCard/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","shuffleFriends","id","alt","name","src","image","App","state","friends","count","array","highScore","message","Shuffle","_this","includes","setState","document","getElementById","classList","add","setTimeout","remove","push","scoreFriends","_this2","this","map","friend","components_FriendCard","key","React","Component","ReactDOM","render","src_App_0"],"mappings":"gRAeeA,MAZf,SAAoBC,GAClB,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAU,kBAAKL,EAAMM,eAAeN,EAAMO,MAC9DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,0CCwE5BC,6MAzEbC,MAAQ,CACNC,UACAC,MAAO,EACPC,MAAO,GACPC,UAAW,EACXC,QAAS,8BAGXZ,eAAiB,SAACC,GAEhB,IAAMO,EAAUK,IAAQC,EAAKP,MAAMC,SAE/BM,EAAKP,MAAMG,MAAMK,SAASd,IACxBa,EAAKP,MAAME,MAAQK,EAAKP,MAAMI,WAChCG,EAAKE,SAAS,CAAEL,UAAWG,EAAKP,MAAME,QAExCK,EAAKE,SAAS,CAAEP,MAAO,EAAGC,MAAO,GAAIE,QAAS,+CAC9CK,SAASC,eAAe,WAAWC,UAAUC,IAAI,OACjDC,WAAW,WACTJ,SAASC,eAAe,WAAWC,UAAUG,OAAO,QACnD,OAEHR,EAAKP,MAAMG,MAAMa,KAAKtB,GACtBa,EAAKE,SAAS,CAAER,YAChBM,EAAKE,SAAS,CAAEP,MAAOK,EAAKP,MAAME,MAAQ,IAC1CK,EAAKE,SAAS,CAAEJ,QAAS,0BACzBK,SAASC,eAAe,WAAWC,UAAUC,IAAI,SACjDC,WAAW,WACTJ,SAASC,eAAe,WAAWC,UAAUG,OAAO,UACnD,SAYPE,aAAe,WAEbV,EAAKE,SAAS,CAAEP,MAAOK,EAAKP,MAAME,MAAQ,6EAInC,IAAAgB,EAAAC,KACP,OAEE/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,GAAG,UACNN,EAAAC,EAAAC,cAAA,oBAAY6B,KAAKnB,MAAME,OACvBd,EAAAC,EAAAC,cAAA,KAAGI,GAAG,WAAWyB,KAAKnB,MAAMK,SAC5BjB,EAAAC,EAAAC,cAAA,wBAAgB6B,KAAKnB,MAAMI,YAE7BhB,EAAAC,EAAAC,cAAA,OAAKI,GAAG,eAAeH,UAAY,aAClC4B,KAAKnB,MAAMC,QAAQmB,IAAI,SAAAC,GAAM,OAC5BjC,EAAAC,EAAAC,cAACgC,EAAD,CACE5B,GAAI2B,EAAO3B,GACX6B,IAAKF,EAAOE,IACZzB,MAAOuB,EAAOvB,MACdL,eAAgByB,EAAKzB,4BA/Df+B,IAAMC,iBCDxBC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASlB,SAASC,eAAe","file":"static/js/main.bf2e8f54.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    \n      <div className=\"card\" onClick={ ()=> props.shuffleFriends(props.id)} >\n        <div className=\"img-container\">\n          <img alt={props.name} src={props.image} />\n        </div>\n      </div>\n    \n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\nimport  Shuffle  from \"shuffle-array\"\n\nclass App extends React.Component {\n  state = {\n    friends,\n    count: 0,\n    array: [],\n    highScore: 0,\n    message: \"Click any image to begin\"\n  };\n\n  shuffleFriends = (id) => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = Shuffle(this.state.friends)\n\n    if (this.state.array.includes(id)) {\n      if (this.state.count > this.state.highScore) {\n        this.setState({ highScore: this.state.count })\n      }\n      this.setState({ count: 0, array: [], message: \" WRONG GUESS!! Click any image to Restart \" })\n      document.getElementById(\"message\").classList.add(\"red\")\n      setTimeout(() => {\n        document.getElementById(\"message\").classList.remove(\"red\")\n      }, 800);\n    } else {\n      this.state.array.push(id)\n      this.setState({ friends });\n      this.setState({ count: this.state.count + 1 });\n      this.setState({ message: \"You Guessed Correctly\" })\n      document.getElementById(\"message\").classList.add(\"green\")\n      setTimeout(() => {\n        document.getElementById(\"message\").classList.remove(\"green\")\n      }, 800);\n\n    }\n\n\n\n   \n\n\n\n  };\n  \n  scoreFriends = () => {\n\n    this.setState({ count: this.state.count + 1 });\n\n  };\n\n  render() {\n    return (\n\n      <div>\n        <div id=\"header\">\n          <p>Count : {this.state.count}</p>\n          <p id=\"message\">{this.state.message}</p> \n          <p>High Score: {this.state.highScore}</p>\n        </div>\n        <div id=\"friend-cards\" className = \"container\">\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.key}\n            image={friend.image}\n            shuffleFriends={this.shuffleFriends}\n\n          />\n        ))}\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}